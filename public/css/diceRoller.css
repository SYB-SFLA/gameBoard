body {
  background-color: #f39c12;
}
  
#app {
  display: flex;
  flex-direction: column;
}

#player {
  background-color: #f39c12;
}

#dealer {
  background-color: #e67e22;
}

.board {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  align-content: center;
  position: relative;
}


@keyframes pop {
  0% { 
    transform: scale(0); 
  }
  75% { 
    transform: scale(1.1); 
  }
  100% { 
    transform: scale(1); 
  }
}

/* class ajoutée à un élément du DOM dans diceRoller.js dans la méthode createDice */
.dice {
  background-image: url('../img/dice-sprite.png');
  width: 100px;
  height: 100px;
  margin: 1em;
  animation: pop .4s ease 0s 1; 
  /* animation: nameAnimation duration timing-function delay iteration-count*/
}

#welcome {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.6em;
}

/* class ajoutée à un élément du DOM dans la méthode start du fichier diceRoller.js */
#app.hidden, #welcome.hidden {
  display: none;
}

.btn {
  padding: 1em 2em;
  background: #fff;
  border: 0;
  border-radius: 5px;
  cursor: pointer;
  font-size: 1em;
  border-bottom:4px solid #ad5304;
}

.btn:hover {
  margin-top: 1px;
  border-bottom-width: 3px;
}

#game {
  display: flex;
}

.form {
  height: 150px;
  background-color: rgba(140, 140, 140, 0.8);
}

#game-form {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 1em;
}

#dice-number {
  margin: .5em 0;
  color: #fff;
  font-weight: bold;
}

/* la règle @keyframes gère les étapes requises dans un processus d'animation CSS. Elle permet à la séquence d'animation de mieux contrôler les étapes clés que les transitions. */
@keyframes fade {
  0% { 
    opacity: 0; 
  }
  100% { 
    opacity: 1; 
  }
}

/* class ajoutée à un élément du DOM dans la méthode displayResult du fichier diceRoller.js */
.result {
  position: absolute;
  /* la position absolute est relative à l'élément voisin le plus proche au lieu d'être relative à la page. S'il n'y a pas de voisin, l'élément sera postionné par rapport au corps du document et son mouvement sera lié au défilement de la page */
  left: 0;
  bottom: 0;
  width: 100%;
  background: rgba(0, 0, 0, .3);
  color: #fff;
  font-size: 3em;
  padding: .3em 0;
  text-align: center;
  animation: fade .4s ease 0s 1;
  /* animation: nameAnimation duration timing-function delay iteration-count 
  'fade' étant configuré au dessus avec la règle @keyframes
  */
}

/* class ajoutée à un élément du DOM dans la méthode createCounter du fichier diceRoller.js */
.counter {
  position: fixed;
  /* la position fixed permet à un élément de se trouver toujours au même endroit même si on scroll la page  */
  top: 0;
  left: 0;
  color: #fff;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 75vh;
  text-shadow: 5px 5px 0 #000;
  /* text shadow: horizontal-shadow verticale shadown blur-radius color */
}
  